{"ast":null,"code":"/**\n * @name setProps\n * @description Set the ityped properties configuration\n * @param {Object} config The configuration properties\n * @return {Promise}\n */\nconst setProps = _ref => {\n  let {\n    strings = ['Put your strings here...', 'and Enjoy!'],\n    typeSpeed = 100,\n    backSpeed = 50,\n    backDelay = 500,\n    startDelay = 500,\n    cursorChar = '|',\n    placeholder = false,\n    showCursor = true,\n    disableBackTyping = false,\n    onFinished = function () {},\n    loop = true\n  } = _ref;\n  return {\n    strings,\n    typeSpeed,\n    backSpeed,\n    cursorChar,\n    backDelay,\n    placeholder,\n    startDelay,\n    showCursor,\n    loop,\n    disableBackTyping,\n    onFinished\n  };\n};\nexport const init = (element, properties) => {\n  let i = 0,\n    l,\n    STRINGS_TO_ITERATE;\n  const typewrite = (strings, props) => {\n    if (i === l) if (props.loop) i = 0;\n    setTimeout(() => {\n      typeString(strings[i], props);\n    }, props.startDelay);\n  };\n  const typeString = (str, props) => {\n    let index = 0,\n      strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder ? element.placeholder += str[index] : element.textContent += str[index];\n      if (++index === strLen) return onStringTyped(intervalID, props);\n    }, props.typeSpeed);\n  };\n  const onStringTyped = (id, props) => {\n    clearInterval(id);\n    if (props.disableBackTyping && i === l - 1) {\n      return props.onFinished();\n    }\n    if (!props.loop && i === l - 1) {\n      return props.onFinished();\n    }\n    setTimeout(() => eraseString(props), props.backDelay);\n  };\n  const eraseString = props => {\n    let str = props.placeholder ? element.placeholder : element.textContent,\n      strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder ? element.placeholder = element.placeholder.substr(0, --strLen) : element.textContent = str.substr(0, --strLen);\n      if (strLen === 0) return onStringErased(intervalID, props);\n    }, props.backSpeed);\n  };\n  const onStringErased = (id, props) => {\n    clearInterval(id);\n    ++i;\n    typewrite(STRINGS_TO_ITERATE, props);\n  };\n  const setCursor = (element, props) => {\n    let cursorSpan = document.createElement('span');\n    cursorSpan.classList.add('ityped-cursor');\n    cursorSpan.textContent = '|';\n    cursorSpan.textContent = props.cursorChar;\n    element.insertAdjacentElement('afterend', cursorSpan);\n  };\n  const startTyping = prop => {\n    let props = setProps(prop || {});\n    let strings = props.strings;\n    STRINGS_TO_ITERATE = strings;\n    l = strings.length;\n    if (typeof element === \"string\") element = document.querySelector(element);\n    if (props.showCursor) setCursor(element, props);\n    typewrite(strings, props);\n  };\n  return startTyping(properties);\n};","map":{"version":3,"names":["setProps","_ref","strings","typeSpeed","backSpeed","backDelay","startDelay","cursorChar","placeholder","showCursor","disableBackTyping","onFinished","loop","init","element","properties","i","l","STRINGS_TO_ITERATE","typewrite","props","setTimeout","typeString","str","index","strLen","length","intervalID","setInterval","textContent","onStringTyped","id","clearInterval","eraseString","substr","onStringErased","setCursor","cursorSpan","document","createElement","classList","add","insertAdjacentElement","startTyping","prop","querySelector"],"sources":["E:/desktop/Web Development/Node Js/reactfolder/myportfolio/node_modules/ityped/src/index.js"],"sourcesContent":["/**\n * @name setProps\n * @description Set the ityped properties configuration\n * @param {Object} config The configuration properties\n * @return {Promise}\n */\nconst setProps = ({\n  strings = ['Put your strings here...', 'and Enjoy!'],\n  typeSpeed = 100,\n  backSpeed = 50,\n  backDelay = 500,\n  startDelay = 500,\n  cursorChar = '|',\n  placeholder = false,\n  showCursor = true,\n  disableBackTyping = false,\n  onFinished = function () { },\n  loop = true\n}) => ({\n  strings,\n  typeSpeed,\n  backSpeed,\n  cursorChar,\n  backDelay,\n  placeholder,\n  startDelay,\n  showCursor,\n  loop,\n  disableBackTyping,\n  onFinished\n})\n\nexport const init = (element, properties) => {\n  let i = 0, l, STRINGS_TO_ITERATE;\n\n  const typewrite = (strings, props) => {\n    if (i === l)\n      if (props.loop) i = 0;\n    setTimeout(() => { typeString(strings[i], props); }, props.startDelay);\n  }\n\n  const typeString = (str, props) => {\n    let index = 0,\n      strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder ? element.placeholder += str[index] : element.textContent += str[index];\n      if (++index === strLen) return onStringTyped(intervalID, props);\n    }, props.typeSpeed);\n  }\n\n  const onStringTyped = (id, props) => {\n    clearInterval(id);\n    if (props.disableBackTyping && i === l - 1) {\n      return props.onFinished()\n    }\n    if (!props.loop && i === l - 1) {\n      return props.onFinished();\n    }\n    setTimeout(() => eraseString(props), props.backDelay);\n  }\n\n  const eraseString = (props) => {\n    let str = props.placeholder ? element.placeholder : element.textContent,\n      strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder\n        ? element.placeholder = element.placeholder.substr(0, --strLen)\n        : element.textContent = str.substr(0, --strLen);\n      if (strLen === 0) return onStringErased(intervalID, props);\n    }, props.backSpeed);\n  }\n\n  const onStringErased = (id, props) => {\n    clearInterval(id);\n    ++i;\n    typewrite(STRINGS_TO_ITERATE, props);\n  }\n\n  const setCursor = (element, props) => {\n    let cursorSpan = document.createElement('span');\n    cursorSpan.classList.add('ityped-cursor');\n    cursorSpan.textContent = '|';\n    cursorSpan.textContent = props.cursorChar;\n    element.insertAdjacentElement('afterend', cursorSpan);\n  }\n\n\n  const startTyping = (prop) => {\n    let props = setProps(prop || {})\n    let strings = props.strings\n    STRINGS_TO_ITERATE = strings\n    l = strings.length\n    if (typeof element === \"string\") element = document.querySelector(element)\n    if (props.showCursor) setCursor(element, props)\n    typewrite(strings, props)\n  }\n\n  return startTyping(properties)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}